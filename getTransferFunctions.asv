function [PTF, ATF] = getTransferFunctions(source, pupil)
% ATF: absorption transfer function
% PTF: phase transfer function
% assumes weak object approximation
% exp(mu-j*phi) ~ 1 + mu - j*phi

% padding if needed
if mod( size(source,1), 2) == 0
    crop_rows = true;
    source = [source; zeros(1,size(source,2))];
    pupil = [pupil; zeros(1,size(pupil,2))];
end

if mod( size(source,2), 2) == 0
    crop_cols = true;
    source = [source, zeros(size(source,1),1)];
    pupil = [pupil, zeros(size(pupil,1),1)];
end

% compute term1 and term2 which are later(*) added 
term1 = centered_ifft2( ...
    centered_fft2( source .* conj(pupil) ) .* ...
    conj( centered_fft2( conj(pupil) ) ) );
term1 = rot90( term1, 2 );
term2 = centered_ifft2( ...
    centered_fft2( source .* pupil ) .* ...
    conj( centered_fft2( pupil ) ) );

ATF = (term1 + term2);
PTF = 1j*(term1 - term2);

% crop if needed
if crop_rows
    ATF = ATF(1:end-1,:);
    PTF = PTF(1:end-1,:);
end

if crop_rows
    ATF = ATF(:,1:end-1);
    PTF = PTF(:,1:end-1);
end

end

function G = centered_fft2(g)

G = fftshift(fft2(ifftshift(g)));

end

function g = centered_ifft2(G)

g = fftshift(ifft2(ifftshift(G)));

end